{
  "name": "omise-mcp-server",
  "version": "1.0.0",
  "description": "MCP Server for Omise Payment Integration",
  "main": "dist/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "start": "node dist/index.js",
    "lint": "eslint . --ext .ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:error": "jest --testPathPattern=error",
    "test:auth": "jest --testPathPattern=auth",
    "test:rate-limit": "jest --testPathPattern=rate-limit",
    "test:all": "jest tests",
    "test:app": "cd test-app && npm test",
    "test:app:dev": "cd test-app && npm run dev",
    "test:app:build": "cd test-app && npm run build",
    "test:runner": "cd test-app && npx ts-node test-runner.ts",
    "test:runner:all": "cd test-app && npx ts-node test-runner.ts all",
    "test:runner:performance": "cd test-app && npx ts-node test-runner.ts performance",
    "test:runner:load": "cd test-app && npx ts-node test-runner.ts load",
    "test:runner:report": "cd test-app && npx ts-node test-runner.ts report"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.4.0",
    "ajv": "^8.12.0",
    "axios": "^1.6.0",
    "crypto": "^1.0.1",
    "dotenv": "^16.3.1",
    "json-schema": "^0.4.0",
    "jsonwebtoken": "^9.0.2",
    "tslib": "^2.8.1",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@faker-js/faker": "^8.4.0",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node": "^20.9.0",
    "@types/sinon": "^17.0.2",
    "@types/supertest": "^2.0.16",
    "jest": "^29.7.0",
    "msw": "^2.0.8",
    "nock": "^13.4.0",
    "sinon": "^17.0.1",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "typescript": "^5.2.2"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/tests/**/*.test.ts",
      "**/tests/**/*.spec.ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/index.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.ts"
    ],
    "testTimeout": 30000
  }
}
